name: Build & Publish Swagger UI (multi-apis)

on:
  push:
    branches: [ main ]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Tools
        run: sudo apt-get update && sudo apt-get install -y gettext-base

      # Load repo secrets
      - name: Build sites
        env:
          # base URLs per API
          API1_BASE_URL: ${{ secrets.API_BASE_URL }}
          API2_BASE_URL: ${{ secrets.API_BASE_URL }}
          API3_BASE_URL: ${{ secrets.API_BASE_URL }}
          
          # header names
          API_KEY_HEADER_NAME: ${{ secrets.API_KEY_HEADER_NAME }}
        run: |
          set -euo pipefail
          mkdir -p dist

          for API in api1 api2; do
            echo "==> Building $API"
            mkdir -p "dist/$API"

            # pick values for this API
            case "$API" in
              api1)
                API_BASE_URL="$API1_BASE_URL"
                API_HEADER_NAME="${API1_API_KEY_HEADER_NAME:-${API_KEY_HEADER_NAME:-X-API-Key}}"
                ;;
              api2)
                API_BASE_URL="$API2_BASE_URL"
                API_HEADER_NAME="${API2_API_KEY_HEADER_NAME:-${API_KEY_HEADER_NAME:-X-API-Key}}"
                ;;
            esac

            # mask in logs
            echo "::add-mask::${API_BASE_URL}"
            echo "::add-mask::${API_HEADER_NAME}"

            # substitute placeholders into the template
            VARS='${API_BASE_URL} ${API_KEY_HEADER_NAME}'
            API_KEY_HEADER_NAME="$API_HEADER_NAME" \
            API_BASE_URL="$API_BASE_URL" \
              envsubst "$VARS" < "openapi/$API/openapi.template.yaml" \
              > "dist/$API/openapi.yaml"

            # Swagger UI HTML for each API
            cp site/swagger.html "dist/$API/index.html"
          done

          # Root landing page (prevents 404s)
          cp site/index.html dist/index.html

          # Jekyll can interfere with pathsâ€”disable it
          touch dist/.nojekyll

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: dist

  deploy:
    needs: build
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - id: deployment
        uses: actions/deploy-pages@v4
